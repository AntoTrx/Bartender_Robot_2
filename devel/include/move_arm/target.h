// Generated by gencpp from file move_arm/target.msg
// DO NOT EDIT!


#ifndef MOVE_ARM_MESSAGE_TARGET_H
#define MOVE_ARM_MESSAGE_TARGET_H

#include <ros/service_traits.h>


#include <move_arm/targetRequest.h>
#include <move_arm/targetResponse.h>


namespace move_arm
{

struct target
{

typedef targetRequest Request;
typedef targetResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct target
} // namespace move_arm


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::move_arm::target > {
  static const char* value()
  {
    return "66e12f7d13e74171b48748f4e38919a7";
  }

  static const char* value(const ::move_arm::target&) { return value(); }
};

template<>
struct DataType< ::move_arm::target > {
  static const char* value()
  {
    return "move_arm/target";
  }

  static const char* value(const ::move_arm::target&) { return value(); }
};


// service_traits::MD5Sum< ::move_arm::targetRequest> should match
// service_traits::MD5Sum< ::move_arm::target >
template<>
struct MD5Sum< ::move_arm::targetRequest>
{
  static const char* value()
  {
    return MD5Sum< ::move_arm::target >::value();
  }
  static const char* value(const ::move_arm::targetRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::move_arm::targetRequest> should match
// service_traits::DataType< ::move_arm::target >
template<>
struct DataType< ::move_arm::targetRequest>
{
  static const char* value()
  {
    return DataType< ::move_arm::target >::value();
  }
  static const char* value(const ::move_arm::targetRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::move_arm::targetResponse> should match
// service_traits::MD5Sum< ::move_arm::target >
template<>
struct MD5Sum< ::move_arm::targetResponse>
{
  static const char* value()
  {
    return MD5Sum< ::move_arm::target >::value();
  }
  static const char* value(const ::move_arm::targetResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::move_arm::targetResponse> should match
// service_traits::DataType< ::move_arm::target >
template<>
struct DataType< ::move_arm::targetResponse>
{
  static const char* value()
  {
    return DataType< ::move_arm::target >::value();
  }
  static const char* value(const ::move_arm::targetResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVE_ARM_MESSAGE_TARGET_H
